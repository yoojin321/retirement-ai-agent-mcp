services:
  retirement-ai-agent:
    build: .
    container_name: retirement-ai-agent-mcp
    ports:
      - "8000:8000"
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    environment:
      - PYTHONPATH=/app
      - ENVIRONMENT=development
      - LOG_LEVEL=INFO
      - SECRET_KEY=retirement-ai-agent-secret-key-2025
      - ENCRYPTION_KEY=retirement-encryption-key-2025
      - MCP_SERVER_HOST=0.0.0.0
      - MCP_SERVER_PORT=8000
      - POSTGRES_DB=retirement_db
      - POSTGRES_USER=retirement_user
      - POSTGRES_PASSWORD=retirement_pass_2025
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET_KEY=jwt-secret-key-2025
      - JWT_ALGORITHM=HS256
      - JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30
      - CACHE_TTL=3600
      - MAX_WORKERS=4
      - DEBUG=true
    restart: unless-stopped
    networks:
      - retirement-network

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: retirement-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - retirement-network

  # PostgreSQL for data storage (optional)
  postgres:
    image: postgres:15-alpine
    container_name: retirement-postgres
    environment:
      POSTGRES_DB: retirement_db
      POSTGRES_USER: retirement_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-retirement_pass}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - retirement-network

volumes:
  redis_data:
  postgres_data:

networks:
  retirement-network:
    driver: bridge
